// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.2.31'
    ext.kotlinVersion = "1.2.31"

    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    compileSdkVersion = 27
    buildToolsVersion = '27.0.3'

    minSdkVersion = 21
    targetSdkVersion = 27

    supportLibVersion = '27.1.1'

    constraintLayoutVersion = '1.0.2'

    // Third party libs

    okhttpVersion = '3.10.0'
    retrofitVersion = '2.4.0'

    daggerVersion = '2.15'

    rxJavaVersion = '2.1.12'
    rxAndroidVersion = '2.0.2'

    // Test libs
    mockitoVersion = '2.18.0'
    hamcrestVersion = '1.3'
    assertjVersion = '1.1.1'
    junitVersion = '4.12'

    runnerVersion = '0.4.1'
    uiautomatorVersion = '2.1.2'
    rulesVersion = '0.4.1'
    espressoVersion = '2.2.1'
    dexMakerVersion = '1.4'
}
// Since there will not be any incremental builds,
// it is really not needed to use pre-dexing.
// Disable it only on build server
project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin" == plugin.class.name) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin" == plugin.class.name) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}
